<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ProjectBDataSet6" targetNamespace="http://tempuri.org/ProjectBDataSet6.xsd" xmlns:mstns="http://tempuri.org/ProjectBDataSet6.xsd" xmlns="http://tempuri.org/ProjectBDataSet6.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ProjectBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ProjectBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Student_Management_System.Properties.Settings.GlobalReference.Default.ProjectBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassAttendanceTableAdapter" GeneratorDataComponentClassName="ClassAttendanceTableAdapter" Name="ClassAttendance" UserDataComponentName="ClassAttendanceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ProjectBConnectionString (Settings)" DbObjectName="ProjectB.dbo.ClassAttendance" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ClassAttendance] WHERE (([Id] = @Original_Id) AND ([AttendanceDate] = @Original_AttendanceDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_AttendanceDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="AttendanceDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ClassAttendance] ([AttendanceDate]) VALUES (@AttendanceDate);
SELECT Id, AttendanceDate FROM ClassAttendance WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@AttendanceDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="AttendanceDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, AttendanceDate FROM dbo.ClassAttendance</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ClassAttendance] SET [AttendanceDate] = @AttendanceDate WHERE (([Id] = @Original_Id) AND ([AttendanceDate] = @Original_AttendanceDate));
SELECT Id, AttendanceDate FROM ClassAttendance WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@AttendanceDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="AttendanceDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_AttendanceDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="AttendanceDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="ProjectB.dbo.ClassAttendance" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="AttendanceDate" DataSetColumn="AttendanceDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentAttendanceTableAdapter" GeneratorDataComponentClassName="StudentAttendanceTableAdapter" Name="StudentAttendance" UserDataComponentName="StudentAttendanceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ProjectBConnectionString (Settings)" DbObjectName="ProjectB.dbo.StudentAttendance" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StudentAttendance] WHERE (([AttendanceId] = @Original_AttendanceId) AND ([StudentId] = @Original_StudentId) AND ([AttendanceStatus] = @Original_AttendanceStatus))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AttendanceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AttendanceStatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceStatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StudentAttendance] ([AttendanceId], [StudentId], [AttendanceStatus]) VALUES (@AttendanceId, @StudentId, @AttendanceStatus);
SELECT AttendanceId, StudentId, AttendanceStatus FROM StudentAttendance WHERE (AttendanceId = @AttendanceId) AND (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AttendanceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AttendanceStatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceStatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AttendanceId, StudentId, AttendanceStatus FROM dbo.StudentAttendance</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StudentAttendance] SET [AttendanceId] = @AttendanceId, [StudentId] = @StudentId, [AttendanceStatus] = @AttendanceStatus WHERE (([AttendanceId] = @Original_AttendanceId) AND ([StudentId] = @Original_StudentId) AND ([AttendanceStatus] = @Original_AttendanceStatus));
SELECT AttendanceId, StudentId, AttendanceStatus FROM StudentAttendance WHERE (AttendanceId = @AttendanceId) AND (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AttendanceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AttendanceStatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceStatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AttendanceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AttendanceStatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AttendanceStatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AttendanceId" DataSetColumn="AttendanceId" />
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="AttendanceStatus" DataSetColumn="AttendanceStatus" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ProjectBDataSet6" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ProjectBDataSet6" msprop:Generator_UserDSName="ProjectBDataSet6">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ClassAttendance" msprop:Generator_TableClassName="ClassAttendanceDataTable" msprop:Generator_TableVarName="tableClassAttendance" msprop:Generator_TablePropName="ClassAttendance" msprop:Generator_RowDeletingName="ClassAttendanceRowDeleting" msprop:Generator_RowChangingName="ClassAttendanceRowChanging" msprop:Generator_RowEvHandlerName="ClassAttendanceRowChangeEventHandler" msprop:Generator_RowDeletedName="ClassAttendanceRowDeleted" msprop:Generator_UserTableName="ClassAttendance" msprop:Generator_RowChangedName="ClassAttendanceRowChanged" msprop:Generator_RowEvArgName="ClassAttendanceRowChangeEvent" msprop:Generator_RowClassName="ClassAttendanceRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="AttendanceDate" msprop:Generator_ColumnVarNameInTable="columnAttendanceDate" msprop:Generator_ColumnPropNameInRow="AttendanceDate" msprop:Generator_ColumnPropNameInTable="AttendanceDateColumn" msprop:Generator_UserColumnName="AttendanceDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentAttendance" msprop:Generator_TableClassName="StudentAttendanceDataTable" msprop:Generator_TableVarName="tableStudentAttendance" msprop:Generator_TablePropName="StudentAttendance" msprop:Generator_RowDeletingName="StudentAttendanceRowDeleting" msprop:Generator_RowChangingName="StudentAttendanceRowChanging" msprop:Generator_RowEvHandlerName="StudentAttendanceRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentAttendanceRowDeleted" msprop:Generator_UserTableName="StudentAttendance" msprop:Generator_RowChangedName="StudentAttendanceRowChanged" msprop:Generator_RowEvArgName="StudentAttendanceRowChangeEvent" msprop:Generator_RowClassName="StudentAttendanceRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AttendanceId" msprop:Generator_ColumnVarNameInTable="columnAttendanceId" msprop:Generator_ColumnPropNameInRow="AttendanceId" msprop:Generator_ColumnPropNameInTable="AttendanceIdColumn" msprop:Generator_UserColumnName="AttendanceId" type="xs:int" />
              <xs:element name="StudentId" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="AttendanceStatus" msprop:Generator_ColumnVarNameInTable="columnAttendanceStatus" msprop:Generator_ColumnPropNameInRow="AttendanceStatus" msprop:Generator_ColumnPropNameInTable="AttendanceStatusColumn" msprop:Generator_UserColumnName="AttendanceStatus" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ClassAttendance" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="StudentAttendance_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentAttendance" />
      <xs:field xpath="mstns:AttendanceId" />
      <xs:field xpath="mstns:StudentId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_StudentAttendance_ClassAttendance" msdata:parent="ClassAttendance" msdata:child="StudentAttendance" msdata:parentkey="Id" msdata:childkey="AttendanceId" msprop:Generator_UserChildTable="StudentAttendance" msprop:Generator_ChildPropName="GetStudentAttendanceRows" msprop:Generator_UserRelationName="FK_StudentAttendance_ClassAttendance" msprop:Generator_ParentPropName="ClassAttendanceRow" msprop:Generator_RelationVarName="relationFK_StudentAttendance_ClassAttendance" msprop:Generator_UserParentTable="ClassAttendance" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>